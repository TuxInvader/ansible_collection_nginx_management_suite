---

- name: Locate Existing Policies
  include_role:
    name: nginxinc.nginx_management_suite.nms_sm_get_policy_refs
  vars:
    nms_sm_policy_include_content: false
    nms_sm_policy_decode_content: false
    nms_sm_policy_uid: "{{ nms_sm_policy.metadata.uid | default('') }}"
  when: nms_sm_policy_refs is undefined or 'uid' in nms_sm_policy.metadata

- name: Get our policy if it exists
  include_role:
    name: nginxinc.nginx_management_suite.nms_sm_get_policy
  vars:
    nms_sm_policy_uid: "{{ nms_sm_policy.metadata.uid | default('') }}"
    nms_sm_policy_name: "{{ nms_sm_policy.metadata.name | default('')}}"
  when:
  - nms_sm_policy_refs is defined
  - nms_sm_policy.metadata.name in nms_sm_policy_refs

- name: Convert policy to JSON and encode content
  set_fact:
    nms_sm_policy_json: "{{ nms_sm_policy | combine({ 'content': ( nms_sm_policy.content | to_json | b64encode ) }, recursive=True) }}"

- name: Create new NMS-SM Security Policy
  uri:
    url: "https://{{ nms_fqdn }}{{ nms_api_version }}/security/policies?isNewRevision={{ nms_sm_policy_new_revision }}"
    method: POST
    body: "{{ nms_sm_policy_json }}"
    body_format: json
    return_content: true
    status_code:
      - 201
    validate_certs: "{{ nms_validate_certs | default(false) }}"
    headers: "{{ nms_auth_headers }}"
  register: response
  changed_when: response.status == 201

  when: nms_sm_encoded_policy is undefined or nms_sm_policy_new_revision is true

- name: Patch existing NMS-SM Policy
  block:

    - name: PUT Policy
      uri:
        url: "https://{{ nms_fqdn }}{{ nms_sm_policy_refs[nms_sm_policy.metadata.name].rel }}"
        method: PUT
        body: "{{ nms_sm_policy_json }}"
        body_format: json
        return_content: true
        status_code:
          - 200
        validate_certs: "{{ nms_validate_certs | default(false) }}"
        headers: "{{ nms_auth_headers }}"
      register: response
      changed_when: response.status == 200
      when: ( nms_sm_policy_status.json.content != nms_sm_policy_json.content ) or
          ( nms_sm_policy_status.json.metadata.displayName != nms_sm_policy.metadata.displayName ) or
          ( nms_sm_policy_status.json.metadata.description != nms_sm_policy.metadata.description )

  when: nms_sm_policy_refs is defined and nms_sm_policy_refs[nms_sm_policy.metadata.name] is defined and
        nms_sm_policy_new_revision is false
