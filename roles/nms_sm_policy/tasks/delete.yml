---

- name: Delete by UUID
  uri:
    url: "https://{{ nms_fqdn }}{{ nms_api_version }}/security/policies/{{ nms_sm_policy.metadata.uid }}"
    method: DELETE
    status_code:
      - 200
    validate_certs: "{{ nms_validate_certs | default(false) }}"
    headers: "{{ nms_auth_headers }}"
  register: response
  changed_when: response.status == 200
  when: nms_sm_policy.metadata.uid is defined

- name: Delete by Name
  block:
 
    - name: GET NMS-SM Policy status
      uri:
        url: "https://{{ nms_fqdn }}{{ nms_api_version }}/security/policies?includePolicyContent=false"
        method: GET
        status_code:
          - 200
          - 404
        validate_certs: "{{ nms_validate_certs | default(false) }}"
        headers: "{{ nms_auth_headers }}"
      register: nms_sm_policy_status

    - name: Set nms_sm_policy_refs fact
      set_fact:
        nms_sm_policy_refs: "{{ nms_sm_policy_refs | default({}) | combine({ item.metadata.name: (item  | combine({'rel': nms_api_version ~ '/security/policies/' ~ item.metadata.uid}) )}, recursive=True) }}"
      loop: "{{ nms_sm_policy_status.json['items'] }}"

    - name: Delete Policy
      uri:
        url: "https://{{ nms_fqdn }}{{ nms_sm_policy_refs[nms_sm_policy.metadata.name].rel }}"
        method: DELETE
        status_code:
          - 200
        validate_certs: "{{ nms_validate_certs | default(false) }}"
        headers: "{{ nms_auth_headers }}"
      register: response
      changed_when: response.status == 200
      when: nms_sm_policy_refs[nms_sm_policy.metadata.name] is defined

  when: nms_sm_policy.metadata.uid is not defined

