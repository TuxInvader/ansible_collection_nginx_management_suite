---

- name: Fail if required variables are not defined
  assert:
    that: ({{ item }} is defined) and ({{ item }} | string | length > 0)
  loop:
    - nms_fqdn
    - nms_api_version
    - nms_validate_certs

- name: Fail if we have no search parameters
  fail:
    msg: "You must provide one of: `nms_nim_config_template_rel`, `nms_nim_config_template_uid`, or `nms_nim_config_template_name`"
  when: 
    - nms_nim_config_template_rel is undefined or nms_nim_config_template_rel == ""
    - nms_nim_config_template_uid is undefined or nms_nim_config_template_uid == ""
    - nms_nim_config_template_name is undefined or nms_nim_config_template_name == ""

- name: Reset nms_nim_get_config_template_link fact
  set_fact:
    nms_nim_get_config_template_link: ""

- name: Set nms_nim_get_config_template_link fact (from rel)
  set_fact:
    nms_nim_get_config_template_link: "{{ nms_nim_config_template_rel }}"
  when: nms_nim_config_template_rel is defined and nms_nim_config_template_rel != ""

- name: Set nms_nim_get_config_template_link fact (from uid)
  set_fact:
    nms_nim_get_config_template_link: "{{ nms_api_version }}/configs/{{nms_nim_config_template_uid}}"
  when:
  - nms_nim_get_config_template_link == ""
  - nms_nim_config_template_uid is defined and nms_nim_config_template_uid != ""

- name: Locate config_template by Name
  block:

    - name: Get the config_template refs
      include_role:
        name: nginxinc.nginx_management_suite.nms_nim_get_config_template_refs
      vars:
        nms_nim_config_template_include_content: false
        nms_nim_config_template_decode_content: false

    - name: Fail if config_template doesn't exist
      fail:
        msg: Cannot find config_template named {{ nms_nim_config_template_name }}.
      when: nms_nim_config_template_name not in nms_nim_config_template_refs

    - name: Set nms_nim_get_config_template_link fact (from name)
      set_fact:
        nms_nim_get_config_template_link: "{{  nms_nim_config_template_refs[ nms_nim_config_template_name ].rel }}"

  when: nms_nim_get_config_template_link == ""

- name: GET NMS Config
  uri:
    url: "https://{{ nms_fqdn }}{{ nms_nim_get_config_template_link }}"
    method: GET
    return_content: true
    status_code:
      - 200
    validate_certs: "{{ nms_validate_certs | default(false) }}"
    headers: "{{ nms_auth_headers }}"
  register: nms_nim_config_template_status

- name: Set raw config set_fact
  set_fact:
    nms_nim_encoded_config: "{{ nms_nim_config_template_status.json }}"

- name: Decode NSM Config Status
  block:

    - name: Setup Decoded Config fact
      set_fact:
        nms_nim_decoded_config: "{{ nms_nim_decoded_config | default({}) | combine(nms_nim_encoded_config) |
                                combine({'configFiles': {'files': []}, 'auxFiles': {'files': [] }}, recursive=True) }}"

    - name: Decode each config file
      set_fact:
        nms_nim_decoded_config: "{{  nms_nim_decoded_config | combine({ 'configFiles': {'files': [ {'contents':
                                (file.contents|b64decode), 'name': file.name }] }}, list_merge='append', recursive=True) }}"
      loop: "{{ nms_nim_config_template_status.json.configFiles.files }}"
      loop_control:
        loop_var: file
      when:
        - nms_nim_config_template_status.json.configFiles is defined
        - nms_nim_config_template_status.json.configFiles.files is defined

    - name: Decode each aux file
      set_fact:
        nms_nim_decoded_config: "{{  nms_nim_decoded_config | combine({ 'auxFiles': {'files': [ {'contents':
                                 (file.contents|b64decode), 'name': file.name }] }}, list_merge='append', recursive=True) }}"
      loop: "{{ nms_nim_config_template_status.json.auxFiles.files }}"
      loop_control:
        loop_var: file
      when:
        - nms_nim_config_template_status.json.auxFiles is defined
        - nms_nim_config_template_status.json.auxFiles.files is defined

  when: nms_nim_decode_config_content
